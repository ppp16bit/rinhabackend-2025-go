services:
  api1: &api1
    image: pppedro/rinha-backend-go:latest
    hostname: api1
    environment:
      - REDIS_ADDR=redis:6379
      - PAYMENT_PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - INSTACE_ID=api1
      - WORKERS= 4
      - GOMAXPROCS=1
    ports:
      - 8081:8080
    networks:
      - backend
      - payment-processor
    depends_on:
        redis:
          condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: 0.55
          memory: "30MB"

  api2:
    <<: *api1
    hostname: api2
    environment:
      - REDIS_ADDR=redis:6379
      - PAYMENT_PROCESSOR_DEFAULT_URL=http://payment-processor-default:8080
      - PAYMENT_PROCESSOR_FALLBACK_URL=http://payment-processor-fallback:8080
      - INSTACE_ID=api2
      - WORKERS=4
      - GOMAXPROCS=1
    ports:
      - 8082:8080

  nginx:
    image: nginx:1.25.5-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "15MB"

  redis:
    image: redis:7.2-alpine
    command: redis-server --save "" --appendonly no --maxclients 20000
    hostname: redis
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: "0.25"
          memory: "275MB"

networks:
  backend:
    driver: bridge
  payment-processor:
    external: true